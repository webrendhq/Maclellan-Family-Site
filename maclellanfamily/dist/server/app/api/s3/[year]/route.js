(()=>{var e={};e.id=698,e.ids=[698],e.modules={1043:e=>{"use strict";e.exports=require("@aws-sdk/client-s3")},846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},9801:e=>{"use strict";e.exports=import("firebase-admin/app")},4276:e=>{"use strict";e.exports=import("firebase-admin/auth")},7879:e=>{"use strict";e.exports=import("firebase-admin/firestore")},9047:(e,r,t)=>{"use strict";t.a(e,async(e,s)=>{try{t.r(r),t.d(r,{patchFetch:()=>l,routeModule:()=>p,serverHooks:()=>m,workAsyncStorage:()=>u,workUnitAsyncStorage:()=>d});var a=t(2706),o=t(8203),n=t(5994),i=t(3550),c=e([i]);i=(c.then?(await c)():c)[0];let p=new a.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/s3/[year]/route",pathname:"/api/s3/[year]",filename:"route",bundlePath:"app/api/s3/[year]/route"},resolvedPagePath:"C:\\Users\\kevin\\OneDrive\\Documents\\GitHub\\MaclellanFamily.com2\\maclellanfamily\\app\\api\\s3\\[year]\\route.ts",nextConfigOutput:"standalone",userland:i}),{workAsyncStorage:u,workUnitAsyncStorage:d,serverHooks:m}=p;function l(){return(0,n.patchFetch)({workAsyncStorage:u,workUnitAsyncStorage:d})}s()}catch(e){s(e)}})},6487:()=>{},8335:()=>{},3550:(e,r,t)=>{"use strict";t.a(e,async(e,s)=>{try{t.r(r),t.d(r,{GET:()=>p});var a=t(9187),o=t(1043),n=t(4276),i=t(7879),c=t(9801),l=e([n,i,c]);if([n,i,c]=l.then?(await l)():l,!(0,c.getApps)().length)try{(0,c.initializeApp)({credential:(0,c.cert)({projectId:process.env.FIREBASE_PROJECT_ID,clientEmail:process.env.FIREBASE_ADMIN_CLIENT_EMAIL,privateKey:process.env.FIREBASE_ADMIN_PRIVATE_KEY})}),console.log("Firebase Admin initialized successfully")}catch(e){throw console.error("Firebase Admin initialization error:",e),e}let u=new o.S3Client({region:process.env.AWS_S3_REGION||"us-east-2",credentials:{accessKeyId:process.env.AWS_ACCESS_KEY_ID||"",secretAccessKey:process.env.AWS_SECRET_ACCESS_KEY||""}});async function p(e,{params:r}){console.log("Year-specific API route handler started");try{let t=e.headers.get("authorization");if(!t?.startsWith("Bearer "))return console.log("No valid authorization header found"),a.NextResponse.json({error:"Unauthorized"},{status:401});let s=t.split("Bearer ")[1],c=(await (0,n.getAuth)().verifyIdToken(s)).uid,l=(0,i.getFirestore)(),p=await l.collection("users").doc(c).get(),d=p.data()?.folderPath||"",m=`${process.env.AWS_BASE_FOLDER}${d}/${r.year}/`;console.log("Year-specific S3 prefix:",m);let f=new o.ListObjectsV2Command({Bucket:process.env.AWS_S3_BUCKET,Prefix:m,Delimiter:"/"}),x=await u.send(f);console.log("S3 response received for year:",{prefixCount:x.CommonPrefixes?.length||0,contentCount:x.Contents?.length||0});let h=(x.CommonPrefixes||[]).map(e=>e.Prefix?{name:e.Prefix.split("/").slice(-2)[0],path:e.Prefix}:null).filter(e=>null!==e);return console.log("Final folders data for year:",h),a.NextResponse.json(h)}catch(e){return console.error("Detailed error:",e),e instanceof Error&&console.error({name:e.name,message:e.message,stack:e.stack,cause:e.cause}),a.NextResponse.json({error:"Internal Server Error",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}s()}catch(e){s(e)}})}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[989,452],()=>t(9047));module.exports=s})();