{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kevin/OneDrive/Documents/GitHub/MaclellanFamily.com2/maclellanfamily/app/api/s3/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport { ListObjectsV2Command, S3Client, GetObjectCommand } from '@aws-sdk/client-s3';\r\nimport { getSignedUrl } from '@aws-sdk/s3-request-presigner';\r\nimport { getAuth } from 'firebase-admin/auth';\r\nimport { getFirestore } from 'firebase-admin/firestore';\r\nimport { initializeApp, getApps, cert } from 'firebase-admin/app';\r\n\r\n// Initialize Firebase Admin if not already initialized\r\nif (!getApps().length) {\r\n  try {\r\n    initializeApp({\r\n      credential: cert({\r\n        projectId: process.env.FIREBASE_PROJECT_ID,\r\n        clientEmail: process.env.FIREBASE_ADMIN_CLIENT_EMAIL,\r\n        privateKey: process.env.FIREBASE_ADMIN_PRIVATE_KEY,\r\n      }),\r\n    });\r\n    console.log('Firebase Admin initialized successfully');\r\n  } catch (error) {\r\n    console.error('Firebase Admin initialization error:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nconst s3Client = new S3Client({\r\n  region: process.env.AWS_S3_REGION || 'us-east-2',\r\n  credentials: {\r\n    accessKeyId: process.env.AWS_ACCESS_KEY_ID || '',\r\n    secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY || ''\r\n  }\r\n} as const);\r\n\r\nexport async function GET(request: Request) {\r\n  console.log('API route handler started');\r\n  \r\n  try {\r\n    console.log('Environment check:', {\r\n      hasProjectId: !!process.env.FIREBASE_PROJECT_ID,\r\n      hasClientEmail: !!process.env.FIREBASE_ADMIN_CLIENT_EMAIL,\r\n      hasPrivateKey: !!process.env.FIREBASE_ADMIN_PRIVATE_KEY,\r\n      hasAwsRegion: !!process.env.AWS_S3_REGION,\r\n      hasAwsAccessKey: !!process.env.AWS_ACCESS_KEY_ID,\r\n      hasAwsSecretKey: !!process.env.AWS_SECRET_ACCESS_KEY,\r\n      hasAwsBucket: !!process.env.AWS_S3_BUCKET\r\n    });\r\n\r\n    const authHeader = request.headers.get('authorization');\r\n    if (!authHeader?.startsWith('Bearer ')) {\r\n      console.log('No valid authorization header found');\r\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\r\n    }\r\n\r\n    const token = authHeader.split('Bearer ')[1];\r\n    console.log('Got token, attempting verification');\r\n\r\n    const decodedToken = await getAuth().verifyIdToken(token);\r\n    const userId = decodedToken.uid;\r\n    console.log('Token verified for user:', userId);\r\n\r\n    const db = getFirestore();\r\n    const userDoc = await db.collection('users').doc(userId).get();\r\n    const folderPath = userDoc.data()?.folderPath || '';\r\n    console.log('Retrieved folder path:', folderPath);\r\n\r\n    const s3Prefix = `${process.env.AWS_BASE_FOLDER}${folderPath}/`;\r\n    console.log('S3 prefix:', s3Prefix);\r\n\r\n    const command = new ListObjectsV2Command({\r\n      Bucket: process.env.AWS_S3_BUCKET,\r\n      Prefix: s3Prefix,\r\n      Delimiter: '/',\r\n    });\r\n\r\n    const response = await s3Client.send(command);\r\n    console.log('S3 response received:', {\r\n      prefixCount: response.CommonPrefixes?.length || 0,\r\n      contentCount: response.Contents?.length || 0\r\n    });\r\n\r\n    const folderPromises = (response.CommonPrefixes || []).map(async (prefix) => {\r\n      if (!prefix.Prefix) return null;\r\n      \r\n      const folderName = prefix.Prefix.split('/').slice(-2)[0];\r\n      console.log(`\\nProcessing folder: ${folderName}`);\r\n      \r\n      const yearContents = await s3Client.send(new ListObjectsV2Command({\r\n        Bucket: process.env.AWS_S3_BUCKET,\r\n        Prefix: prefix.Prefix,\r\n        Delimiter: ''\r\n      }));\r\n\r\n      const images = yearContents.Contents?.filter(item => \r\n        item.Key?.toLowerCase().match(/\\.(jpg|jpeg|png|gif)$/i)\r\n      ).map(item => item.Key) || [];\r\n\r\n      let backgroundUrl = null;\r\n      if (images.length > 0) {\r\n        const randomImageKey = images[Math.floor(Math.random() * images.length)];\r\n        if (randomImageKey) {\r\n          console.log(`Selected image key for ${folderName}:`, randomImageKey);\r\n          \r\n          // Generate presigned URL for the background image\r\n          const getObjectCommand = new GetObjectCommand({\r\n            Bucket: process.env.AWS_S3_BUCKET,\r\n            Key: randomImageKey,\r\n          });\r\n          \r\n          backgroundUrl = await getSignedUrl(s3Client, getObjectCommand, { \r\n            expiresIn: 3600 // URL expires in 1 hour\r\n          });\r\n          console.log(`Generated presigned URL for ${folderName}:`, backgroundUrl);\r\n        }\r\n      }\r\n\r\n      return {\r\n        name: folderName,\r\n        backgroundUrl,\r\n        totalImages: images.length\r\n      };\r\n    });\r\n\r\n    const folders = (await Promise.all(folderPromises))\r\n      .filter(folder => folder !== null)\r\n      .sort((a, b) => parseInt(a!.name) - parseInt(b!.name));\r\n\r\n    console.log('\\nFinal folders data:', \r\n      folders.map(f => ({\r\n        name: f?.name,\r\n        hasUrl: !!f?.backgroundUrl,\r\n        urlPreview: f?.backgroundUrl ? `${f.backgroundUrl.substring(0, 50)}...` : 'none'\r\n      }))\r\n    );\r\n    \r\n    return NextResponse.json(folders);\r\n  } catch (error) {\r\n    console.error('Detailed error:', error);\r\n    if (error instanceof Error) {\r\n      console.error({\r\n        name: error.name,\r\n        message: error.message,\r\n        stack: error.stack,\r\n        cause: error.cause\r\n      });\r\n    }\r\n    return NextResponse.json(\r\n      { error: 'Internal Server Error', details: error instanceof Error ? error.message : 'Unknown error' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;;;;;;;AAKA,uDAAuD;AACvD,IAAI,CAAC,CAAA,GAAA,wHAAA,CAAA,UAAO,AAAD,IAAI,MAAM,EAAE;IACrB,IAAI;QACF,CAAA,GAAA,wHAAA,CAAA,gBAAa,AAAD,EAAE;YACZ,YAAY,CAAA,GAAA,wHAAA,CAAA,OAAI,AAAD,EAAE;gBACf,WAAW,QAAQ,GAAG,CAAC,mBAAmB;gBAC1C,aAAa,QAAQ,GAAG,CAAC,2BAA2B;gBACpD,YAAY,QAAQ,GAAG,CAAC,0BAA0B;YACpD;QACF;QACA,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wCAAwC;QACtD,MAAM;IACR;AACF;AAEA,MAAM,WAAW,IAAI,qHAAA,CAAA,WAAQ,CAAC;IAC5B,QAAQ,QAAQ,GAAG,CAAC,aAAa,IAAI;IACrC,aAAa;QACX,aAAa,QAAQ,GAAG,CAAC,iBAAiB,IAAI;QAC9C,iBAAiB,QAAQ,GAAG,CAAC,qBAAqB,IAAI;IACxD;AACF;AAEO,eAAe,IAAI,OAAgB;IACxC,QAAQ,GAAG,CAAC;IAEZ,IAAI;QACF,QAAQ,GAAG,CAAC,sBAAsB;YAChC,cAAc,CAAC,CAAC,QAAQ,GAAG,CAAC,mBAAmB;YAC/C,gBAAgB,CAAC,CAAC,QAAQ,GAAG,CAAC,2BAA2B;YACzD,eAAe,CAAC,CAAC,QAAQ,GAAG,CAAC,0BAA0B;YACvD,cAAc,CAAC,CAAC,QAAQ,GAAG,CAAC,aAAa;YACzC,iBAAiB,CAAC,CAAC,QAAQ,GAAG,CAAC,iBAAiB;YAChD,iBAAiB,CAAC,CAAC,QAAQ,GAAG,CAAC,qBAAqB;YACpD,cAAc,CAAC,CAAC,QAAQ,GAAG,CAAC,aAAa;QAC3C;QAEA,MAAM,aAAa,QAAQ,OAAO,CAAC,GAAG,CAAC;QACvC,IAAI,CAAC,YAAY,WAAW,YAAY;YACtC,QAAQ,GAAG,CAAC;YACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACpE;QAEA,MAAM,QAAQ,WAAW,KAAK,CAAC,UAAU,CAAC,EAAE;QAC5C,QAAQ,GAAG,CAAC;QAEZ,MAAM,eAAe,MAAM,CAAA,GAAA,yHAAA,CAAA,UAAO,AAAD,IAAI,aAAa,CAAC;QACnD,MAAM,SAAS,aAAa,GAAG;QAC/B,QAAQ,GAAG,CAAC,4BAA4B;QAExC,MAAM,KAAK,CAAA,GAAA,8HAAA,CAAA,eAAY,AAAD;QACtB,MAAM,UAAU,MAAM,GAAG,UAAU,CAAC,SAAS,GAAG,CAAC,QAAQ,GAAG;QAC5D,MAAM,aAAa,QAAQ,IAAI,IAAI,cAAc;QACjD,QAAQ,GAAG,CAAC,0BAA0B;QAEtC,MAAM,WAAW,GAAG,QAAQ,GAAG,CAAC,eAAe,GAAG,WAAW,CAAC,CAAC;QAC/D,QAAQ,GAAG,CAAC,cAAc;QAE1B,MAAM,UAAU,IAAI,qHAAA,CAAA,uBAAoB,CAAC;YACvC,QAAQ,QAAQ,GAAG,CAAC,aAAa;YACjC,QAAQ;YACR,WAAW;QACb;QAEA,MAAM,WAAW,MAAM,SAAS,IAAI,CAAC;QACrC,QAAQ,GAAG,CAAC,yBAAyB;YACnC,aAAa,SAAS,cAAc,EAAE,UAAU;YAChD,cAAc,SAAS,QAAQ,EAAE,UAAU;QAC7C;QAEA,MAAM,iBAAiB,CAAC,SAAS,cAAc,IAAI,EAAE,EAAE,GAAG,CAAC,OAAO;YAChE,IAAI,CAAC,OAAO,MAAM,EAAE,OAAO;YAE3B,MAAM,aAAa,OAAO,MAAM,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE;YACxD,QAAQ,GAAG,CAAC,CAAC,qBAAqB,EAAE,YAAY;YAEhD,MAAM,eAAe,MAAM,SAAS,IAAI,CAAC,IAAI,qHAAA,CAAA,uBAAoB,CAAC;gBAChE,QAAQ,QAAQ,GAAG,CAAC,aAAa;gBACjC,QAAQ,OAAO,MAAM;gBACrB,WAAW;YACb;YAEA,MAAM,SAAS,aAAa,QAAQ,EAAE,OAAO,CAAA,OAC3C,KAAK,GAAG,EAAE,cAAc,MAAM,2BAC9B,IAAI,CAAA,OAAQ,KAAK,GAAG,KAAK,EAAE;YAE7B,IAAI,gBAAgB;YACpB,IAAI,OAAO,MAAM,GAAG,GAAG;gBACrB,MAAM,iBAAiB,MAAM,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,OAAO,MAAM,EAAE;gBACxE,IAAI,gBAAgB;oBAClB,QAAQ,GAAG,CAAC,CAAC,uBAAuB,EAAE,WAAW,CAAC,CAAC,EAAE;oBAErD,kDAAkD;oBAClD,MAAM,mBAAmB,IAAI,qHAAA,CAAA,mBAAgB,CAAC;wBAC5C,QAAQ,QAAQ,GAAG,CAAC,aAAa;wBACjC,KAAK;oBACP;oBAEA,gBAAgB,MAAM,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,UAAU,kBAAkB;wBAC7D,WAAW,KAAK,wBAAwB;oBAC1C;oBACA,QAAQ,GAAG,CAAC,CAAC,4BAA4B,EAAE,WAAW,CAAC,CAAC,EAAE;gBAC5D;YACF;YAEA,OAAO;gBACL,MAAM;gBACN;gBACA,aAAa,OAAO,MAAM;YAC5B;QACF;QAEA,MAAM,UAAU,CAAC,MAAM,QAAQ,GAAG,CAAC,eAAe,EAC/C,MAAM,CAAC,CAAA,SAAU,WAAW,MAC5B,IAAI,CAAC,CAAC,GAAG,IAAM,SAAS,EAAG,IAAI,IAAI,SAAS,EAAG,IAAI;QAEtD,QAAQ,GAAG,CAAC,yBACV,QAAQ,GAAG,CAAC,CAAA,IAAK,CAAC;gBAChB,MAAM,GAAG;gBACT,QAAQ,CAAC,CAAC,GAAG;gBACb,YAAY,GAAG,gBAAgB,GAAG,EAAE,aAAa,CAAC,SAAS,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG;YAC5E,CAAC;QAGH,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mBAAmB;QACjC,IAAI,iBAAiB,OAAO;YAC1B,QAAQ,KAAK,CAAC;gBACZ,MAAM,MAAM,IAAI;gBAChB,SAAS,MAAM,OAAO;gBACtB,OAAO,MAAM,KAAK;gBAClB,OAAO,MAAM,KAAK;YACpB;QACF;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;YAAyB,SAAS,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAAgB,GACpG;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kevin/OneDrive/Documents/GitHub/MaclellanFamily.com2/maclellanfamily/node_modules/next/dist/src/build/templates/app-route.ts"],"sourcesContent":["import {\n  AppRouteRouteModule,\n  type AppRouteRouteModuleOptions,\n} from '../../server/route-modules/app-route/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\nimport { patchFetch as _patchFetch } from '../../server/lib/patch-fetch'\n\nimport * as userland from 'VAR_USERLAND'\n\n// These are injected by the loader afterwards. This is injected as a variable\n// instead of a replacement because this could also be `undefined` instead of\n// an empty string.\ndeclare const nextConfigOutput: AppRouteRouteModuleOptions['nextConfigOutput']\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\n// INJECT:nextConfigOutput\n\nconst routeModule = new AppRouteRouteModule({\n  definition: {\n    kind: RouteKind.APP_ROUTE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    filename: 'VAR_DEFINITION_FILENAME',\n    bundlePath: 'VAR_DEFINITION_BUNDLE_PATH',\n  },\n  resolvedPagePath: 'VAR_RESOLVED_PAGE_PATH',\n  nextConfigOutput,\n  userland,\n})\n\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule\n\nfunction patchFetch() {\n  return _patchFetch({\n    workAsyncStorage,\n    workUnitAsyncStorage,\n  })\n}\n\nexport {\n  routeModule,\n  workAsyncStorage,\n  workUnitAsyncStorage,\n  serverHooks,\n  patchFetch,\n}\n"],"names":["AppRouteRouteModule","RouteKind","patchFetch","_patchFetch","userland","routeModule","definition","kind","APP_ROUTE","page","pathname","filename","bundlePath","resolvedPagePath","nextConfigOutput","workAsyncStorage","workUnitAsyncStorage","serverHooks"],"mappings":";;;;;;;AAAA,SACEA,mBAAmB,QAEd,uDAAsD;AAC7D,SAASC,SAAS,QAAQ,0BAAyB;AACnD,SAASC,cAAcC,WAAW,QAAQ,+BAA8B;AAExE,YAAYC,cAAc,eAAc;;;;;;;;;AAOxC,2EAA2E;AAC3E,UAAU;AACV,MAAA,mBAAA,CAA0B;AAE1B,MAAMC,cAAc,8MAAIL,sBAAAA,CAAoB;IAC1CM,YAAY;QACVC,MAAMN,6KAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACVC,UAAU;QACVC,YAAY;IACd;IACAC,kBAAkB;IAClBC;cACAV;AACF;AAEA,2EAA2E;AAC3E,2EAA2E;AAC3E,mCAAmC;AACnC,MAAM,EAAEW,gBAAgB,EAAEC,oBAAoB,EAAEC,WAAW,EAAE,GAAGZ;AAEhE,SAASH;IACP,oLAAOC,aAAAA,EAAY;QACjBY;QACAC;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}