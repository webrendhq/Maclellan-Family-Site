# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@8575951200e472d5f2d95c625da0c7bec8217c42 # v1.161.0
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      # Create the config files with secrets before Jekyll builds
      - name: Create JavaScript config files
        run: |
          # Create javascript/config.js with Firebase and AWS configs
          cat > javascript/config.js <<EOL
          const firebaseConfig = {
              apiKey: "${{ secrets.FIREBASE_API_KEY }}",
              authDomain: "${{ secrets.FIREBASE_AUTH_DOMAIN }}",
              projectId: "${{ secrets.FIREBASE_PROJECT_ID }}",
              storageBucket: "${{ secrets.FIREBASE_STORAGE_BUCKET }}",
              messagingSenderId: "${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}",
              appId: "${{ secrets.FIREBASE_APP_ID }}"
          };

          // AWS S3 Configuration
          const S3_BUCKET = "${{ secrets.AWS_S3_BUCKET || 'maclellanfamily.com' }}";
          const S3_REGION = "${{ secrets.AWS_S3_REGION || 'us-east-2' }}";
          const BASE_FOLDER = "${{ secrets.AWS_BASE_FOLDER || '0 US' }}";
          const URL_EXPIRATION = parseInt("${{ secrets.URL_EXPIRATION || '3600' }}");

          // Export configurations
          export { 
              firebaseConfig,
              S3_BUCKET,
              S3_REGION,
              BASE_FOLDER,
              URL_EXPIRATION
          };

          // Function to fetch S3 credentials
          export async function fetchS3Credentials() {
              try {
                  const s3Client = new AWS.S3({
                      accessKeyId: "${{ secrets.AWS_ACCESS_KEY_ID }}",
                      secretAccessKey: "${{ secrets.AWS_SECRET_ACCESS_KEY }}",
                      region: S3_REGION,
                      signatureVersion: 'v4'
                  });
                  console.log("S3 client initialized successfully");
                  return s3Client;
              } catch (error) {
                  console.error('Error initializing S3:', error);
                  displayError('Error initializing S3: ' + error.message);
                  return null;
              }
          }
          EOL

      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4